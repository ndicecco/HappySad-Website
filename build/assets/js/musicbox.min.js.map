{"version":3,"sources":["musicbox.min.js"],"names":["e","r","n","t","i","c","require","f","u","a","Error","code","exports","call","p","o","length","1","module","Audio"],"mappings":"CAAuBA,SAAOC,EAAAD,EAAAE,EAAAC,GAAWC,SAASF,EAAEE,EAAAA,GAAI,IAAIJ,EAAEI,GAAI,CAAA,IAAIC,EAAED,GAAA,CAAA,IAAAC,EAAA,mBAA4BC,SAAQA,QAAS,IAAAC,GAASH,EAAAA,OAASI,EAAEJ,GAAAA,GAAA,GAASA,EAAAA,OAAMI,EAAIC,GAAAA,GAAMC,IAAAA,EAAM,IAAAA,MAAA,uBAA8BN,EAAMK,KAAEE,MAAKF,EAAAE,KAAA,mBAA6BP,EAAG,IAACQ,EAAAA,EAAAA,GAAQ,CAAAA,QAAS,IAAGC,EAAKC,GAAEF,GAAAA,KAAQE,EAAAF,QAASX,SAA2Bc,GAAWD,OAAEF,EAAvBX,EAAAA,GAAeA,GAAIa,IAAcd,IAAIG,EAAGW,EAAAF,QAASR,EAAGQ,EAAAA,EAAAA,GAAAA,OAAYV,EAAIM,GAAEI,QAAA,IAAA,IAAAJ,EAAmBF,mBAAmBA,SAAMU,QAAWD,EAAEZ,EAAEC,EAAAA,EAAIY,OAAOD,IAAgBE,EAAEd,EAACC,IAAA,OAAiBc,EAA1clB,CACvB,CAAAiB,EAmBY,CAAA,SAmFVX,EAAQY,EAACN,GAtGX,aAmBY,IAAIO,OAmFd,KAAK,GAAG,CAAC","file":"musicbox.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\n//Music player for sound design page\nvar waltz = \"./assets/audio/waltz.wav\";\nvar ghost = \"./assets/audio/ghost.wav\";\nvar books = \"./assets/audio/books.wav\";\nvar train = \"./assets/audio/train.wav\";\nvar tube = \"./assets/audio/tube.mp3\";\nvar wobble = \"./assets/audio/wobble.wav\";\nvar jenga = \"./assets/audio/jenga.wav\";\nvar whale = \"./assets/audio/whale.wav\";\nvar uptown = \"./assets/audio/uptown.wav\";\nvar jingle = \"./assets/audio/jingle.mp3\";\nvar halls = \"./assets/audio/halls.mp3\";\nvar away = \"./assets/audio/away.mp3\";\nvar tunes = [waltz, ghost, books, train, tube, wobble, jenga, whale, uptown, jingle, halls, away];\nvar fillBar = '';\nvar lastClicked = 'word';\nvar lastReset = 'word';\nvar sound = new Audio();\n\nfunction playOrPauseSong(d) {\n  //d is the id of the controller that was just clicked\n  var d = d;\n\n  if (isNaN(lastClicked)) {//checks to see if this is the first sound you've clicked since loading the page\n    //if it is, great! Move on to loading the sound\n  } else if (sound.currentTime !== 0 && d == lastClicked && lastReset !== d) {//checks if a sound is mid playback AND the sound controller you just clicked is the same as the last one you clicked AND the last reset used is also part of this controller\n    //if so, great! Move on to loading the sound\n  } else if (sound.currentTime == 0 && d == lastClicked && lastReset == d) {//checks if the loaded sound has been reset to 0 AND what you just clicked is the same controller as lastClicked AND what you last reset is the same controller\n    //if so, great! Move on to loading the sound\n  } else if (sound.currentTime !== 0 && d == lastClicked && lastReset == d && sound.paused == false) {\n    //checks if the loaded sound is mid playback AND the justClicked is the same controller as lastClicked AND as lastReset AND the song is not currently paused\n    //in this case, you have reset this controller but you played the sound again, so you're probably trying to pause the song\n    sound.pause();\n    document.querySelector('#s' + d + ' img').setAttribute('src', './assets/img/play.png');\n    return;\n  } else if (sound.currentTime !== 0 && d == lastClicked && d == lastReset && sound.paused == true) {\n    //checks if the loaded sound is mid playback AND the last button you clicked is the same as the last one you reset AND the sound is paused\n    //you're probably trying to play the sound you paused after resetting it at least once\n    sound.play();\n    document.querySelector('#s' + d + ' img').setAttribute('src', './assets/img/pause.png');\n    return;\n  } else {\n    //if none of the above is true, then you must have interacted with the play button of a new controller, so we should reset the sound of whatever controller was last used\n    resetSong(lastClicked);\n  }\n\n  ;\n\n  if (lastClicked !== d) {\n    sound = new Audio();\n  }\n\n  ;\n  lastClicked = d;\n  var i = tunes[d];\n\n  if (sound.readyState == 0) {\n    sound = new Audio(i);\n    sound.play();\n    document.querySelector('#s' + d + ' img').setAttribute('src', './assets/img/pause.png');\n    sound.addEventListener('timeupdate', function () {\n      fillBar = document.getElementById(\"fill\" + d);\n      var position = sound.currentTime / sound.duration;\n      fillBar.style.width = position * 100 + '%';\n    });\n  } else if (sound.readyState == 4 && sound.paused) {\n    sound.play();\n    document.querySelector('#s' + d + ' img').setAttribute('src', './assets/img/pause.png');\n  } else {\n    sound.pause();\n    document.querySelector('#s' + d + ' img').setAttribute('src', './assets/img/play.png');\n  }\n}\n\nfunction resetSong(d) {\n  //d is the id of the controller that was just clicked\n  lastReset = d;\n\n  if (lastClicked !== lastReset) {\n    return;\n  }\n\n  if (lastClicked == lastReset) {}\n\n  clearFills();\n  sound.pause();\n  sound.currentTime = 0;\n  document.querySelector('#s' + lastClicked + ' img').setAttribute('src', './assets/img/play.png');\n  document.querySelector('#s' + d + ' img').setAttribute('src', './assets/img/play.png');\n}\n\nfunction clearFills() {\n  for (var i = 0; i < tunes.length; i++) {\n    var fillBar = document.getElementById(\"fill\" + i);\n    fillBar.style.width = 0;\n  }\n\n  ;\n}\n\n},{}]},{},[1]);\n"]}